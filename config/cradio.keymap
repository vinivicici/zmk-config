#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        asl: alpha_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "ASL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <170>;
            flavor = "balanced";
            hold-trigger-key-positions = <32 33>;
            hold-trigger-on-release;
        };

        asr: alpha_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "ASR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <30 31>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <170>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        aml: alpha_mods_l {
            compatible = "zmk,behavior-hold-tap";
            label = "AML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <170>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <32 33>;
        };

        amr: alpha_mods_r {
            compatible = "zmk,behavior-hold-tap";
            label = "AMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <170>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <30 31>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
            timeout-ms = <40>;
            require-prior-idle-ms = <150>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            timeout-ms = <40>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <2 3>;
            timeout-ms = <40>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <12 13>;
            timeout-ms = <40>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            bindings = <
&kp Q            &kp W        &kp E         &kp R         &kp T        &kp Y      &kp U              &kp I         &kp O            &kp P
&aml LEFT_GUI A  &aml LALT S  &asl LCTRL D  &aml LSHFT F  &kp G        &kp H      &amr LEFT_SHIFT J  &asr LCTRL K  &amr LALT L      &amr LEFT_GUI SQT
&kp Z            &kp X        &kp C         &kp V         &kp B        &kp N      &kp M              &kp COMMA     &ht RALT PERIOD  &kp SLASH
                                            &lt 1 SPACE   &lt 4 TAB    &lt 3 RET  &lt 4 BACKSPACE
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        SYM {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        SYS {
            bindings = <
&trans          &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &studio_unlock    &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR        &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans            &trans  &trans
            >;
        };
    };
};
